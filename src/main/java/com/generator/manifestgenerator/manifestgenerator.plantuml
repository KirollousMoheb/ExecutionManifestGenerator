@startuml

title __MANIFESTGENERATOR's Class Diagram__\n

  namespace  com.generator.manifestgenerator {
      class com.generator.manifestgenerator.ExecutionManifest2Controller {
          ~ accordion : Accordion
          ~ filename : TextField
          ~ isfunctionclusterchoice : ChoiceBox
          ~ isstateclientchoice : ChoiceBox
          ~ scroll : ScrollPane
          - args_container : List<TextField>
          - config_name_container : List<TextField>
          - count : int
          - enter_time_container : List<TextField>
          - env_container : List<TextField>
          - exec_depend_container : List<TextField>
          - exit_time_container : List<TextField>
          - fg_name_container : List<ChoiceBox>
          - fg_states_container : List<TextField>
          - machine_states_container : List<CheckComboBox<String>>
          - sch_policy_container : List<ChoiceBox>
          - sch_priority_container : List<TextField>
          + addConfig()
          + clickBack()
          + generateManifest()
          {static} + prettifyJSON()
          + removeConfig()
          - addPane()
          - checkConfigName()
          - checkSameFunctionGroup()
          - createCheckComboBox()
          - createTitledPane()
          - createTitledPaneContent()
          - getSelectedItems()
          - removePane()
          - saveTextToFile()
          - validateFields()
      }
    }

  

  namespace  com.generator.manifestgenerator {
      class com.generator.manifestgenerator.ExecutionManifestController {
          ~ accordion : Accordion
          ~ choice : ChoiceBox
          ~ filename : TextField
          ~ scroll : ScrollPane
          - args_container : List<TextField>
          - count : int
          - env_container : List<TextField>
          - fg_name_container : List<ChoiceBox>
          - fg_states_container : List<TextField>
          - machine_states_container : List<CheckComboBox>
          - sch_policy_container : List<ChoiceBox>
          - sch_priority_container : List<TextField>
          + addConfig()
          + clickBack()
          + generateManifest()
          {static} + prettifyJSON()
          + removeConfig()
          - addPane()
          - checkSameFunctionGroup()
          - createCheckComboBox()
          - createTitledPane()
          - createTitledPaneContent()
          - getSelectedItems()
          - removePane()
          - saveTextToFile()
          - validateFields()
      }
    }

  

  namespace  com.generator.manifestgenerator {
      class com.generator.manifestgenerator.Launcher {
          {static} + main()
      }
    }

  

  namespace  com.generator.manifestgenerator {
      class com.generator.manifestgenerator.MachineManifestController {
          ~ accordion : Accordion
          ~ fgname : TextField
          ~ filename : TextField
          ~ scroll : ScrollPane
          - fg_names : ArrayList<String>
          - fg_states_container : List<TextField>
          + addFunctionGroup()
          + checkFGName()
          + clickBack()
          + generateManifest()
          + initialize()
          {static} + prettifyJSON()
          + removeFunctionGroup()
          - addPane()
          - createTitledPane()
          - createTitledPaneContent()
          - removePane()
          - saveTextToFile()
      }
    }

  

  namespace  com.generator.manifestgenerator {
      class com.generator.manifestgenerator.MainApplication {
          {static} + main()
          + start()
      }
    }

  

  namespace   com.generator.manifestgenerator {
      class com.generator.manifestgenerator.MainScreenController {
          + goToEM1()
          + goToEM2()
          + goToMachine()
      }
    }

  

  com.generator.manifestgenerator.MainApplication -up-|> javafx.application.Application


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
